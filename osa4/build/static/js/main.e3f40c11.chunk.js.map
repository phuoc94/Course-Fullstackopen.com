{"version":3,"sources":["services/blogs.js","components/Blog.js","components/Notification.js","services/login.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","request","data","create","newObject","config","headers","Authorization","post","response","update","id","put","then","setToken","newToken","remove","delete","Blog","blog","setBlogs","blogs","user","notiHandler","useState","visible","setVisible","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","likeHandler","likes","blogService","resBlog","map","p","console","log","deleteBlog","window","confirm","title","current","filter","b","className","style","onClick","href","url","author","username","prototype","PropTypes","object","isRequired","func","array","Notification","React","forwardRef","props","ref","emessage","setErrorMessage","message","type","setTimeout","useImperativeHandle","displayName","login","credentials","LoginForm","setUser","setUsername","password","setPassword","handleLogin","event","preventDefault","loginService","localStorage","setItem","JSON","stringify","onSubmit","value","name","onChange","target","BlogForm","FormRef","setTitle","setAuthor","setUrl","addBlog","nblog","concat","toggleVisibility","Togglable","hideWhenVisible","display","showWhenVisible","buttonLabel","children","App","useEffect","sort","loggedUserJSON","getItem","parse","useRef","removeItem","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3f40c11.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl)\n    return request.data\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id.id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const request = axios.delete(`${baseUrl}/${id.id}`, config)\n    return request.then(response => response.data)\n}\n\n// eslint-disable-next-line\nexport default { getAll, create, update, setToken, remove }","import React, { useState } from 'react'\nimport blogService from '../services/blogs'\nimport PropTypes from 'prop-types'\n\n\n\nconst Blog = ({ blog, setBlogs, blogs, user, notiHandler }) => {\n    const [visible, setVisible] = useState(false)\n    const blogStyle = {\n        paddingTop: 10,\n        paddingLeft: 2,\n        border: 'solid',\n        borderWidth: 1,\n        marginBottom: 5\n    }\n\n    const likeHandler = async () => {\n        if (process.env.NODE_ENV === 'test') {\n            setBlogs()\n        } else {\n            try {\n                const id = blog.id\n                const likes = blog.likes + 1\n                const resBlog = await blogService.update({ id }, { likes })\n                setBlogs(blogs.map(p => p.id !== blog.id ? p : { ...p, likes: resBlog.likes }))\n            } catch (exception) {\n                console.log('error', exception)\n            }\n        }\n    }\n\n    const deleteBlog = async () => {\n        if (window.confirm(`remove blog ${blog.title}`)) {\n            try {\n                const id = blog.id\n                await blogService.remove({ id })\n                notiHandler.current.notiHandler(`blog ${blog.title} removed`, 'success')\n                setBlogs(blogs.filter(b => b.id !== id))\n            } catch (exception) {\n                console.log('error', exception)\n            }\n        }\n    }\n\n    if (visible) {\n        return (\n            <div className='blog' style={blogStyle}>\n                <p>{blog.title} <button className='button' id='btn-hide' onClick={() => setVisible(false)}>hide</button></p>\n                <p><a href={blog.url}>{blog.url}</a></p>\n                <p>likes {blog.likes} <button className='button' id='btn-like' onClick={likeHandler}>like</button></p>\n                <p>{blog.author}</p>\n                { user.username === blog.user.username && <p><button className='button' id='btn-remove' onClick={deleteBlog}>remove</button></p>}\n            </div>\n        )\n    }\n    return (\n        <div className='blog' style={blogStyle}>\n            {blog.title} {blog.author} <button className='button' id='btn-view' onClick={() => setVisible(true)}>view</button>\n        </div>\n    )\n}\n\nBlog.prototype = {\n    blog: PropTypes.object.isRequired,\n    setBlogs: PropTypes.func.isRequired,\n    notiHandler: PropTypes.func.isRequired,\n    blogs: PropTypes.array.isRequired,\n    user: PropTypes.object.isRequired\n}\nexport default Blog\n","import React, { useState, useImperativeHandle } from 'react'\n\nconst Notification = React.forwardRef((props, ref) => {\n    const [emessage, setErrorMessage] = useState(null)\n\n    const notiHandler = (message, type) => {\n        setErrorMessage(\n            [message, type]\n        )\n        setTimeout(() => {\n            setErrorMessage(null)\n        }, 5000)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            notiHandler\n        }\n    })\n\n    if (!emessage) {\n        return null\n    } else {\n        const message = emessage[0]\n        const type = emessage[1]\n        if (type === 'error') {\n            return (\n                <div className=\"error\">\n                    {message}\n                </div>\n            )\n        } else if (type === 'success') {\n            return (\n                <div className=\"success\">\n                    {message}\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    {message}\n                </div>\n            )\n        }\n    }\n})\n\nNotification.displayName = 'Notification'\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\n// eslint-disable-next-line\nexport default { login }","import React, { useState } from 'react'\nimport blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({ notiHandler, setUser }) => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        try {\n            const user = await loginService.login({\n                username, password,\n            })\n            window.localStorage.setItem(\n                'loggedBlogappUser', JSON.stringify(user)\n            )\n            blogService.setToken(user.token)\n            setUser(user)\n        } catch (exception) {\n            notiHandler.current.notiHandler('wrong username or password', 'error')\n            setPassword('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleLogin}>\n            <div>\n                username\n                <input\n                    type=\"text\"\n                    id='username'\n                    value={username}\n                    name=\"Username\"\n                    onChange={({ target }) => setUsername(target.value)}\n                />\n            </div>\n            <div>\n                password\n                <input\n                    type=\"password\"\n                    id='password'\n                    value={password}\n                    name=\"Password\"\n                    onChange={({ target }) => setPassword(target.value)}\n                />\n            </div>\n            <button id=\"login-button\" type=\"submit\">login</button>\n        </form>\n    )\n}\nLoginForm.prototype = {\n    notiHandler: PropTypes.func.isRequired,\n    setUser: PropTypes.func.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\nimport blogService from '../services/blogs'\nimport PropTypes from 'prop-types'\n\n\nconst BlogForm = ({ setBlogs, blogs, user, notiHandler, FormRef }) => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n\n    const addBlog = async (event) => {\n        event.preventDefault()\n        if (process.env.NODE_ENV === 'test') {\n            setBlogs({ title, author, url })\n        } else {\n            try {\n                const blog = await blogService.create({\n                    title, author, url\n                })\n                const nblog = {\n                    ...blog, user: {\n                        username: user.username\n                    }\n                }\n                setBlogs(blogs.concat(nblog))\n                notiHandler.current.notiHandler(`a new blog ${title} by ${author} added`, 'success')\n                setTitle('')\n                setAuthor('')\n                setUrl('')\n                FormRef.current.toggleVisibility()\n            } catch (exception) {\n                notiHandler.current.notiHandler(`${exception}`, 'error')\n            }\n        }\n    }\n\n    return (\n        <form onSubmit={addBlog}>\n            <div>\n                <h2>Create new blog</h2>\n                title:\n                <input\n                    type=\"text\"\n                    value={title}\n                    id=\"title\"\n                    name=\"title\"\n                    onChange={({ target }) => setTitle(target.value)}\n                />\n            </div>\n            <div>\n                author:\n                <input\n                    type=\"text\"\n                    value={author}\n                    id=\"author\"\n                    name=\"author\"\n                    onChange={({ target }) => setAuthor(target.value)}\n                />\n            </div>\n            <div>\n                url:\n                <input\n                    type=\"text\"\n                    value={url}\n                    id=\"url\"\n                    name=\"url\"\n                    onChange={({ target }) => setUrl(target.value)}\n                />\n            </div>\n            <button id=\"create-button\" type=\"submit\">create</button>\n        </form>\n    )\n}\n\nBlogForm.prototype = {\n    setBlogs: PropTypes.func.isRequired,\n    notiHandler: PropTypes.func.isRequired,\n    blogs: PropTypes.array.isRequired\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    )\n}\n)\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n}\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        blogService.getAll().then(blogs =>\n            setBlogs(blogs.sort((a, b) => a.likes < b.likes ? 1 : -1))\n        )\n    }, [])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n    }, [])\n\n\n    const logout = () => {\n        window.localStorage.removeItem('loggedBlogappUser')\n        setUser(null)\n    }\n\n    const FormRef = useRef()\n    const notiHandler = useRef()\n\n\n    return (\n        <div>\n            <h2>blogs</h2>\n\n            <Notification ref={notiHandler} />\n\n            {\n                user === null\n                    ? <Togglable buttonLabel='login'><LoginForm setUser={setUser} notiHandler={notiHandler} /></Togglable>\n                    : <div>\n                        <p>\n                            {user.name} logged in\n                            <button onClick={logout}>Logout</button>\n                        </p>\n                        <Togglable buttonLabel='Create new blog' ref={FormRef}>\n                            <BlogForm setBlogs={setBlogs} blogs={blogs} user={user} notiHandler={notiHandler} FormRef={FormRef} />\n                        </Togglable>\n                    </div>\n            }\n            {\n                user !== null &&\n        blogs.map(blog =>\n            <Blog key={blog.id} blog={blog} setBlogs={setBlogs} blogs={blogs} user={user} notiHandler={notiHandler} />)\n            }\n\n\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}